#!/usr/bin/env python
from keri.core.coring import MtrDex, Matter
from keri.core.indexing import IdrDex, Indexer
from keri.core.counting import CtrDex_1_0, CtrDex_2_0, Counter
from json import dumps


matter_size = dict()
matter_name = dict()
for key in dir(MtrDex):
    if not key.startswith("__"):
        code = getattr(MtrDex, key)
        sizes = Matter.Sizes.get(code)
        matter_name[key] = code
        matter_size[code] = {
            "hs": sizes.hs,
            "fs": sizes.fs,
            "ss": sizes.ss,
            "xs": sizes.xs,
            "ls": sizes.ls,
        }

indexer_size = dict()
indexer_name = dict()
for key in dir(IdrDex):
    if not key.startswith("__"):
        code = getattr(IdrDex, key)
        sizes = Indexer.Sizes.get(code)
        indexer_name[key] = code
        indexer_size[code] = {
            "hs": sizes.hs,
            "fs": sizes.fs,
            "ss": sizes.ss,
            "os": sizes.os,
            "ls": sizes.ls,
        }

counter_10_size = dict()
counter_10_name = dict()
for key in dir(CtrDex_1_0):
    if not key.startswith("__"):
        code = getattr(CtrDex_1_0, key)
        sizes = Counter.Sizes.get(1).get(0).get(code)
        counter_10_name[key] = code
        counter_10_size[code] = {
            "hs": sizes.hs,
            "fs": sizes.fs,
            "ss": sizes.ss,
        }

counter_20_size = dict()
counter_20_name = dict()
for key in dir(CtrDex_2_0):
    if not key.startswith("__"):
        code = getattr(CtrDex_2_0, key)
        sizes = Counter.Sizes.get(2).get(0).get(code)
        counter_20_name[key] = code
        counter_20_size[code] = {
            "hs": sizes.hs,
            "fs": sizes.fs,
            "ss": sizes.ss,
        }

print("// THIS FILE IS AUTO-GENERATED")
print("// DO NOT EDIT THIS FILE DIRECTLY")
print("// Use scripts/generate-codec.py to generate this file")


print("export interface MatterCodeSize {")
print("  hs: number;")
print("  fs: number | null;")
print("  ss: number;")
print("  xs: number;")
print("  ls: number;")
print("}")

print("export interface IndexerCodeSize {")
print("  hs: number;")
print("  fs: number | null;")
print("  ss: number;")
print("  os: number;")
print("  ls: number;")
print("}")

print("export interface CounterCodeSize {")
print("  hs: number;")
print("  fs: number;")
print("  ss: number;")
print("}")

print(f"export const MatterCode = {dumps(matter_name, indent=2)};")
print(f"export const IndexCode = {dumps(indexer_name, indent=2)};")
print(f"export const CountCode_10 = {dumps(counter_10_name, indent=2)};")
print(f"export const CountCode_20 = {dumps(counter_20_name, indent=2)};")


print(
    f"export const MatterSize: Record<string, MatterCodeSize> = {dumps(matter_size, indent=2)};"
)
print(
    f"export const IndexerSize: Record<string, IndexerCodeSize> = {dumps(indexer_size, indent=2)};"
)
print(
    f"export const CounterSize_10: Record<string, CounterCodeSize> = {dumps(counter_10_size, indent=2)};"
)
print(
    f"export const CounterSize_20: Record<string, CounterCodeSize> = {dumps(counter_20_size, indent=2)};"
)
